#! /usr/bin/python
# -*- coding: utf-8 -*-

import sys
import os

BASE_DIR = os.path.abspath( os.path.join( os.path.dirname( __file__ ), ".." ) )
path     = os.path.abspath( os.path.join( BASE_DIR, "python" ) )
sys.path.append( path )

import time
import pylab as pl
import numpy as np
import momo

data     = momo.read_data( "data/filtered/%s.txt" % sys.argv[1] )


minx = min( data, key = lambda x: x[3] )[3]
maxx = max( data, key = lambda x: x[3] )[3]
miny = min( data, key = lambda y: y[4] )[4]
maxy = max( data, key = lambda y: y[4] )[4]

theta = np.random.rand( 18 ).astype( np.float32 )
theta /= np.linalg.norm( theta )


ts = sorted( theta )
vmin = sum( ts[:2] )
vmax = sum( ts[-2:] )

width  = 128
height = 32
delta  = 0.15

compute_costs = momo.irl.features.flow.compute_costs( width, height, delta, 3 )
plan = momo.planning.dijkstra()

pl.figure( 1, figsize = ( 30, 10 ), dpi = 75 )
pl.ion()

for f in momo.frames( data ):
  frame = []
  for o in f:
    frame.append( [o[3] - minx, o[4] - miny, o[5], o[6]] )

  frame  = np.array( frame, dtype=np.float32 )

  t = time.time()

  costs = compute_costs( 0.04, theta, frame )
  cummulated, parents = plan( costs, np.array( [width - 1, height - 1, 0], dtype = np.int32 ) )

  t = time.time() - t
  print "Compute FPS", 1 / t

  t = time.time()
  pl.clf()
  pl.subplot( 3, 3, 1 )
  pl.axis( "scaled" )
  pl.xlim( 0, width * delta )
  pl.ylim( 0, height * delta )
  pl.imshow( costs[3], pl.cm.jet, None, None, "none", extent = (0, width * delta, 0, height * delta ), origin = "lower", vmin = vmin, vmax = vmax )
  pl.subplot( 3, 3, 4 )
  pl.axis( "scaled" )
  pl.xlim( 0, width * delta )
  pl.ylim( 0, height * delta )
  pl.imshow( costs[4], pl.cm.jet, None, None, "none", extent = (0, width * delta, 0, height * delta ), origin = "lower", vmin = vmin, vmax = vmax )
  pl.subplot( 3, 3, 7 )
  pl.axis( "scaled" )
  pl.xlim( 0, width * delta )
  pl.ylim( 0, height * delta )
  pl.imshow( costs[5], pl.cm.jet, None, None, "none", extent = (0, width * delta, 0, height * delta ), origin = "lower", vmin = vmin, vmax = vmax )
  pl.subplot( 3, 3, 6 )
  pl.axis( "scaled" )
  pl.xlim( 0, width * delta )
  pl.ylim( 0, height * delta )
  pl.imshow( costs[0], pl.cm.jet, None, None, "none", extent = (0, width * delta, 0, height * delta ), origin = "lower", vmin = vmin, vmax = vmax )
  pl.subplot( 3, 3, 3 )
  pl.axis( "scaled" )
  pl.xlim( 0, width * delta )
  pl.ylim( 0, height * delta )
  pl.imshow( costs[1], pl.cm.jet, None, None, "none", extent = (0, width * delta, 0, height * delta ), origin = "lower", vmin = vmin, vmax = vmax )
  pl.subplot( 3, 3, 9 )
  pl.axis( "scaled" )
  pl.xlim( 0, width * delta )
  pl.ylim( 0, height * delta )
  pl.imshow( costs[7], pl.cm.jet, None, None, "none", extent = (0, width * delta, 0, height * delta ), origin = "lower", vmin = vmin, vmax = vmax )
  pl.subplot( 3, 3, 2 )
  pl.axis( "scaled" )
  pl.xlim( 0, width * delta )
  pl.ylim( 0, height * delta )
  pl.imshow( costs[2], pl.cm.jet, None, None, "none", extent = (0, width * delta, 0, height * delta ), origin = "lower", vmin = vmin, vmax = vmax )
  pl.subplot( 3, 3, 8 )
  pl.axis( "scaled" )
  pl.xlim( 0, width * delta )
  pl.ylim( 0, height * delta )
  pl.imshow( costs[6], pl.cm.jet, None, None, "none", extent = (0, width * delta, 0, height * delta ), origin = "lower", vmin = vmin, vmax = vmax )
  pl.subplot( 3, 3, 5 )
  pl.axis( "scaled" )
  pl.xlim( 0, width * delta )
  pl.ylim( 0, height * delta )
  pl.imshow( cummulated[0], pl.cm.jet, None, None, "none", extent = (0, width * delta, 0, height * delta ), origin = "lower", vmin = 0, vmax = 80 )
  points = plan.get_path( parents, 0, 0, 0 )
  pl.plot( 
    [v * delta + 0.5 * delta for v in points[:, 0]],
    [v * delta + 0.5 * delta for v in points[:, 1]],
  "m." )
  pl.draw()
  t = time.time() - t
  print vmin, vmax
  print "Draw FPS", 1 / t


